{"version":3,"sources":["Editor.js","Button.js","local.js","App.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","className","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","STYLES","SIZES","Button","children","type","onClick","buttonStyle","buttonSize","checkButtonStyle","includes","checkButtonSize","useLocalStorage","key","initialValue","prefixedKey","useState","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","myLang","setMyLang","timeout","setTimeout","clearTimeout","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c8d4a42.chunk.js","sourcesContent":["import React from 'react'\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport 'codemirror/mode/xml/xml'\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport 'codemirror/mode/css/css'\r\nimport { Controlled as ControlledEditor } from 'react-codemirror2'\r\nexport default function Editor(props) {\r\n  const {\r\n    language,\r\n    displayName,\r\n    value,\r\n    onChange\r\n  } = props\r\n\r\n\r\n  function handleChange(editor, data, value) {\r\n    onChange(value)\r\n  }\r\n\r\n  return (\r\n    <div className=\"editor-container\">\r\n      <div className=\"editor-title\">\r\n        {displayName}\r\n      </div>\r\n      <ControlledEditor\r\n        onBeforeChange={handleChange}\r\n        value={value}\r\n        className=\"code-mirror-wrapper\"\r\n        options={{\r\n          lineWrapping: true,\r\n          lint: true,\r\n          mode: language,\r\n          theme: 'material',\r\n          lineNumbers: true\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport \"./Button.css\";\r\n\r\nconst STYLES = [\r\n  \"btn--primary--solid\",\r\n  \"btn--warning--solid\",\r\n  \"btn--danger--solid\",\r\n  \"btn--success--solid\",\r\n  \"btn--primary--outline\",\r\n  \"btn--warning--outline\",\r\n  \"btn--danger--outline\",\r\n  \"btn--success--outline\"\r\n];\r\n\r\nconst SIZES = [\"btn--medium\", \"btn--large\"];\r\n\r\nexport const Button = ({\r\n  children,\r\n  type,\r\n  onClick,\r\n  buttonStyle,\r\n  buttonSize\r\n}) => {\r\n  const checkButtonStyle = STYLES.includes(buttonStyle)\r\n    ? buttonStyle\r\n    : STYLES[0];\r\n\r\n  const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\r\n\r\n  return (\r\n    <button\r\n      className={`btn ${checkButtonStyle} ${checkButtonSize}`}\r\n      onClick={onClick}\r\n      type={type}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\nexport default Button;","import { useEffect, useState } from 'react'\r\n\r\nconst PREFIX = 'online-editor'\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n  const prefixedKey = PREFIX + key\r\n\r\n  const [value, setValue] = useState(() => {\r\n    const jsonValue = localStorage.getItem(prefixedKey)\r\n    if (jsonValue != null) return JSON.parse(jsonValue)\r\n\r\n    if (typeof initialValue === 'function') {\r\n      return initialValue()\r\n    } else {\r\n      return initialValue\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n  }, [prefixedKey, value])\r\n\r\n  return [value, setValue]\r\n}","import React, { useState, useEffect } from 'react';\nimport Editor from './Editor'\nimport Button from './Button'\nimport useLocalStorage from './local'\n\n\n\nfunction App() {\n  const [html, setHtml] = useLocalStorage('html', '')\n  const [css, setCss] = useLocalStorage('css', '')\n  const [js, setJs] = useLocalStorage('js', '')\n  const [srcDoc, setSrcDoc] = useState('')\n \n  const [myLang, setMyLang] = useState(\"\");\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setSrcDoc(`\n        <html>\n          <body>${html}</body>\n          <style>${css}</style>\n          <script>${js}</script>\n        </html>\n      `)\n    }, 250)\n\n    return () => clearTimeout(timeout)\n  }, [html, css, js])\n\n  return (\n    <>\n      <div className = \"buttonpane\">\n      <Button\n        onClick={() => {\n          setMyLang(\"html\");\n        }}\n        type=\"button\"\n        buttonStyle=\"btn--danger--solid\"\n        buttonSize=\"btn--medium\"\n      >\n        HTML\n      </Button>\n      <Button\n        onClick={() => {\n          setMyLang(\"css\");\n        }}\n        type=\"button\"\n        buttonStyle=\"btn--danger--solid\"\n        buttonSize=\"btn--medium\"\n      >\n        CSS\n      </Button>\n      <Button\n        onClick={() => {\n          setMyLang(\"js\");\n        }}\n        type=\"button\"\n        buttonStyle=\"btn--danger--solid\"\n        buttonSize=\"btn--medium\"\n      >\n        JS\n      </Button>\n      </div>\n      <div className = \"author\">\n      By Dhrumil Prakash Makhija 18BCE0843\n      </div>\n      <div className=\"pane top-pane\">\n      {myLang === \"html\" && (\n        <Editor\n          language=\"xml\"\n          displayName=\"HTML\"\n          value={html}\n          onChange={setHtml}\n        />\n      )}\n      {myLang === \"css\" && (\n        <Editor\n          language=\"css\"\n          displayName=\"CSS\"\n          value={css}\n          onChange={setCss}\n        />\n      )}\n      {myLang === \"js\" && (\n        <Editor\n          language=\"javascript\"\n          displayName=\"JS\"\n          value={js}\n          onChange={setJs}\n        />\n      )}\n      </div>\n           \n      \n      \n      <div className=\"pane\">\n        <iframe\n          srcDoc={srcDoc}\n          title=\"output\"\n          sandbox=\"allow-scripts\"\n          frameBorder=\"0\"\n          width=\"100%\"\n          height=\"100%\"\n        />\n      </div>\n        </>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}